<%- include('./templates/header.ejs')%>
    <div class="bookCreation">
        <div class="container column">
            <h2>Book creation</h2>
            <form class="createForm" enctype="multipart/form-data">
                <div class="leftSide">
                    <div class="inputField">
                        <div class="imageUpload__wrap">
                            <input type="file" class="imageUpload__input" name="coverImage" accept="image/*"/>
                            <div class="imageUpload__text">
                                <i class="ri-image-line"></i>
                                <h3>Upload book cover</h3>
                                <p>Image must be at least 512x512 
                                    in file format .jgp or .png</p>
                            </div>
                        </div>
                    </div>
                    <p>or</p>
                    <div class="inputField inputField__url">
                        <label for="url">Paste URL</label>
                        <input type="url" name="url" />
                    </div>
                </div>
                <div class="rightSide">
                    <div class="inputField title">
                        <input type="text" name="title" />
                        <label for="title">book name</label>
                    </div>
                    <div class="flex__inputField">
                        <div class="inputField author">
                            <input type="text" name="author" />
                            <label for="author">author</label>
                        </div>
                        <div class="inputField publisher">
                            <input type="text" name="publisher" />
                            <label for="publisher">publisher</label>
                        </div>
                    </div>
                    <div class="inputField selectField">
                        <i class="ri-arrow-down-s-line"></i>
                        <select name="genre">
                            <option value="" disabled selected none>genre</option>
                            <option value="fantasy">Fantasy</option>
                            <option value="adventure">Adventure</option>
                            <option value="romance">Romance</option>
                            <option value="relationships">Relationships</option>
                            <option value="travel">Travel</option>
                            <option value="history">History</option>
                            <option value="health">Health</option>
                            <option value="motivational">Motivational</option>
                            <option value="development">Development</option>
                            <option value="self-help">Self-help</option>
                            <option value="art">Art</option>
                            <option value="guide">Guide</option>
                        </select>
                    </div>
                    <div class="inputField description">
                        <div class="descriptionContainer">
                            <p class="errorMessage"></p>
                            <label for="description">about</label>
                            <textarea name="description" rows="25" placeholder="What is this book about?"></textarea>
                        </div>
                    </div>
                    <div class="btnContainer">
                        <a href="/books" class="btn blue outlined">Cancel</a>
                        <button class="btn blue">Complete</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <script>
        const createBookForm = document.querySelector('.createForm');
        const titleSection = document.querySelector('.inputField.title')
        const authorSection = document.querySelector('.inputField.author')
        const descriptionSection = document.querySelector('.inputField.description')
        const publisherSection = document.querySelector('.inputField.publisher')
        const genreSection = document.querySelector('.selectField')
        const imageSection = document.querySelector('.leftSide')
        const imageUploadInput = document.querySelector('.imageUpload__input')

        createBookForm.addEventListener('submit', async (e) => {
            e.preventDefault()     

            const file = imageUploadInput.files[0]

            if(file){
                const reader = new FileReader()
                reader.readAsDataURL(file)
                reader.onloadend = async () => {
                    const object = {
                        title: createBookForm.title.value,
                        author: createBookForm.author.value,
                        publisher: createBookForm.publisher.value,
                        genre: createBookForm.genre.value,
                        description: createBookForm.description.value.split("\n\n").join("<br>"),
                        coverImageData: reader.result
                    }
                    try{
                        postBook(object)
                    } catch(err){
                        console.log(err)
                    }

                }
            } else{
                const object = {
                    coverImageUrl: createBookForm.url.value,
                    title: createBookForm.title.value,
                    author: createBookForm.author.value,
                    publisher: createBookForm.publisher.value,
                    genre: createBookForm.genre.value,
                    description: createBookForm.description.value.split("\n\n").join("<br>"),
                }

                try{
                    postBook(object)
                } catch(err){
                    console.log(err)
                }

            }
            
        })

        const postBook = async (objectData) => {
                const res = await fetch('/books', {
                    method: "POST",
                    body: JSON.stringify(objectData),
                    headers: {'Content-type': 'application/json'}
                })
                
                const data = await res.json();
                console.log(data)

                if(data.errors){
                    if(data.errors.title.length > 0){
                        titleSection.classList.add('error')
                    } else{
                        titleSection.classList.remove('error')
                    }
                    if(data.errors.author.length > 0){
                        authorSection.classList.add('error')
                    } else{
                        authorSection.classList.remove('error')
                    }   
                    if(data.errors.publisher.length > 0){
                        publisherSection.classList.add('error')
                    } else{
                        publisherSection.classList.remove('error')
                    }
                    if(data.errors.genre.length > 0){
                        genreSection.classList.add('error')
                    }  else{
                        genreSection.classList.remove('error')
                    }
                    if(data.errors.description.length > 0){
                        descriptionSection.classList.add('error')
                        descriptionSection.querySelector('.errorMessage').textContent = data.errors.description
                    }  else{
                        descriptionSection.classList.remove('error')
                        descriptionSection.querySelector('.errorMessage').textContent = ""
                    }

                    if(data.errors.coverImageUrl.length > 0){
                        imageSection.classList.add('error')
                    }  else{
                        imageSection.classList.remove('error')
                    }

                } else{
                    location.assign('/books')
                }
                
        }
    </script>
<%- include('./templates/footer.ejs')%>